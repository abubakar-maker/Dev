@import url('https://fonts.googleapis.com/css2?family=Ga+Maamli&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');
@tailwind base;
@tailwind components;
@tailwind utilities;


*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}


html {
  box-sizing: border-box;
  font-family: "Ga Maamli", sans-serif;

  @media only screen and (max-width:68.75em) {
    font-size: 50%;
  }
}


body {
  font-family: "Poppins", sans-serif;
  font-weight: 300;
  line-height: 1.6;
}




.txt:hover {
  animation: movingTxt 2s alternate;
}


img {
  box-shadow: 0 2rem 4rem rgba(20, 20, 20, 0.7);
  animation: imgMove 2s ease 0s 1 normal both;
  border-radius: 5px;
}

.sec-font {
  font-family: 'Nunito', sans-serif;
}



.svg {
  transition: all .4s;
}

.svg:hover {
  transform: translateY(-10px) scale(1.5);
}

.about {
  background: rgb(238, 174, 202);
  background: radial-gradient(circle, rgba(238, 174, 202, 1) 0%, rgba(148, 187, 233, 1) 100%);
}


.trade {
  background: rgb(34, 193, 195);
  background: linear-gradient(0deg, rgba(34, 193, 195, 1) 0%, rgba(253, 187, 45, 1) 100%);
}

.button {
  cursor: pointer;
  width: 50px;
  height: 50px;
  border-radius: 50px;
  border: none;
  background: linear-gradient(120deg, #833ab4, #fd1d1d, #fcb045);
  position: relative;
  z-index: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-left: 10px;
  transition: 0.1s;
}

.button svg {
  color: white;
  width: 30px;
  height: 30px;
  z-index: 9;
}

.button:nth-child(3) {
  background: linear-gradient(120deg, #02ff2c, #008a12);
}

.button:nth-child(4) {
  background: rgb(69, 187, 255);
}

.button:nth-child(5) {
  background: rgb(255, 33, 33);
}

.button:nth-child(6) {
  background: black;
}

.button:active {
  transform: scale(0.85);
}

.button::before {
  content: "";
  position: absolute;
  width: 55px;
  height: 55px;
  background-color: #212121;
  border-radius: 50px;
  z-index: -1;
  border: 0px solid rgba(255, 255, 255, 0.411);
  transition: 0.4s;
}

.button:hover::before {
  width: 0px;
  height: 0px;
}









.contact {
  width: 100%;
  height: 100%;
  background-image: repeating-linear-gradient(-45deg,
      orange 0,
      transparent 30px,
      orangered 30px,
      transparent 60px,
      orange 120px,
      transparent 240px);
  background-color: orange;

}

footer {
  width: 100%;
  height: 100%;
  --s: 105px;
  /* control the size */
  --c1: #b9b9b9;
  --c2: #dcdcdc;
  --c3: #fafafa;

  background: conic-gradient(from 75deg,
      var(--c1) 15deg,
      var(--c2) 0 30deg,
      #0000 0 180deg,
      var(--c2) 0 195deg,
      var(--c1) 0 210deg,
      #0000 0) calc(0.5 * var(--s)) calc(0.5 * var(--s) / 0.577),
    conic-gradient(var(--c1) 30deg,
      var(--c3) 0 75deg,
      var(--c1) 0 90deg,
      var(--c2) 0 105deg,
      var(--c3) 0 150deg,
      var(--c2) 0 180deg,
      var(--c3) 0 210deg,
      var(--c1) 0 256deg,
      var(--c2) 0 270deg,
      var(--c1) 0 286deg,
      var(--c2) 0 331deg,
      var(--c3) 0);
  background-size: var(--s) calc(var(--s) / 0.577);
  /* 0.577=tan(30deg)*/
}




.card-container {
  margin-left: 30rem;
  width: 300px;
  height: 300px;
  position: relative;
  border-radius: 10px;
}

@media only screen and (max-width: 768px) {
  .card-container {
    margin-left: 0;
  }

  .txt {
    animation: none;
  }
}


input,textarea {
  transition: all .4s;
}

input:focus {
  border-bottom: 2px solid transparent;
  border-image: radial-gradient(circle, rgba(63,94,251,1) 0%, rgba(252,70,107,1) 100%);
  border-image-slice: 1;
}


textarea:focus{
  border-bottom: 2px solid transparent;
  border-image: radial-gradient(circle, rgba(238,174,202,1) 0%, rgba(148,187,233,1) 100%);;
  border-image-slice: 1;
}


.card-container::before {
  content: "";
  z-index: -1;
  position: absolute;
  inset: 0;
  background: linear-gradient(-45deg, #fc00ff 0%, #00dbde 100%);
  transform: translate3d(0, 0, 0) scale(0.95);
  filter: blur(20px);
}

.card {
  width: 100%;
  height: 100%;
  border-radius: inherit;
  overflow: hidden;
}

.card .img-content {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background: linear-gradient(-45deg, #fc00ff 0%, #00dbde 100%);
  transition: scale 0.6s, rotate 0.6s, filter 1s;
}

.card .img-content svg {
  width: 50px;
  height: 50px;
  fill: #212121;
  transition: all 0.6s cubic-bezier(0.23, 1, 0.320, 1);
}

.card .content {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 10px;
  color: gray;
  padding: 20px 24px;
  line-height: 1.5;
  border-radius: 5px;
  opacity: 0;
  pointer-events: none;
  transform: translateY(50px);
  transition: all 0.6s cubic-bezier(0.23, 1, 0.320, 1);
}

.card .content .heading {
  font-size: 32px;
  font-weight: 700;
}

.card:hover .content {
  opacity: 1;
  transform: translateY(0);
}

.card:hover .img-content {
  scale: 2.5;
  rotate: 30deg;
  filter: blur(7px);
}

.card:hover .img-content svg {
  fill: transparent;
}






/* 
  ul li{

    animation: myAnim 1s ease 1s 1 alternate forwards;
  } */


@keyframes myAnim {
  0% {
    animation-timing-function: ease-in;
    opacity: 0;
    transform: translateY(-250px);
  }

  38% {
    animation-timing-function: ease-out;
    opacity: 1;
    transform: translateY(0);
  }

  55% {
    animation-timing-function: ease-in;
    transform: translateY(-65px);
  }

  72% {
    animation-timing-function: ease-out;
    transform: translateY(0);
  }

  81% {
    animation-timing-function: ease-in;
    transform: translateY(-28px);
  }

  90% {
    animation-timing-function: ease-out;
    transform: translateY(0);
  }

  95% {
    animation-timing-function: ease-in;
    transform: translateY(-8px);
  }

  100% {
    animation-timing-function: ease-out;
    transform: translateY(0);
  }
}



@keyframes imgMove {

  0%,
  50%,
  100% {
    opacity: 1;
  }

  25%,
  75% {
    opacity: 0;
  }
}



@keyframes movingTxt {
  0% {
    animation-timing-function: .3s;
    transform: translateX(-10rem);
  }

  50% {
    animation-timing-function: .3s;
    transform: translateX(1rem);

  }


  70% {
    animation-timing-function: .2s;
    transform: translateX(3rem);
  }

  100% {
    animation-timing-function: .3s;
    transform: translateX(10rem);
  }


}